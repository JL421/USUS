function Get-Packages
{
	IF (!(Test-Path $PackagesDir))
	{
		Write-Host "The Package Repository $PackagesDir
Doesn't seem to exist. Please correct before continuing.`r`n"
		Break
	}
	$Packages = Get-ChildItem $PackagesDir -Exclude *Example*, *Template* -Recurse | ? { !$_.PSIsContainer}
	IF ($Packages.Count -eq 0)
	{
		Write-Host "You don't seem to have any Packages in
$PackageRepo
Please add some before continuing.`r`n"
		Exit
	}

	$Counter = 0
	$PackagesCommand = "@("
	ForEach ($Package in $Packages)
	{
		[string]$PackageGroup = $Package.FullName.Replace($PackagesDir, "")
		[string]$PackageGroup = $PackageGroup.TrimEnd($Package.Name)
		[string]$PackagesCommand = $PackagesCommand + '@("' + $PackageGroup + '",' + [IO.File]::ReadAllText($Package.FullName) + ")"
		$Counter ++
		IF ($Packages.Count -ne $Counter)
		{
			$PackagesCommand = $PackagesCommand + ","
		}
	}
	IF ($Packages.Count -le 1)
	{
		$PackagesCommand = $PackagesCommand + "@('False','False','False','False','False','False','False','False','False','False','False')"
	}
	$PackagesCommand = $PackagesCommand + ")"
	$Updates = Invoke-Expression $PackagesCommand
	Return $Updates
}