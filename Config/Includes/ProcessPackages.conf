function ProcessPackages
{
	$PackageResults = "@("
	ForEach ($i in $Updates)
	{		
		$LocalRepo = $SoftwareRepo
		IF ($i[5] -ne $Null)
		{
			$LocalRepo = $i[5]
			IF (!(Test-Path $LocalRepo))
			{
				Write-Host "Software Repository $LocalRepo dosen't seem to exist.
				Please create this location or run this script with the credentials required to access it.`r`n"
				Continue
			}
		}
		
		$ProgramName = $i[2]
		$url = $i[6]
		
		$LocalRepo = $LocalRepo + $i[0] + $i[1]
		IF (!(Test-Path $LocalRepo))
		{
			Try
			{
				New-Item $LocalRepo -Type Directory -ErrorAction Stop | Out-Null
			} Catch {
				Write-Host "Could not create program directory of $LocalRepo.
Please ensure that this script has Write permissions to this location, and try again.`r`n"
			} 
		}
		[string]$CurrentInstaller = $LocalRepo + "\" + $i[1]
		
		#Check Current Version
		
		$NewInstaller = GetLatestSoftware $CurrentInstaller $url $i[1] $i[3] $i[4] $i[7]
		
		IF ($i[4] -eq $True)
		{
			$CurrentInstallerFile = $CurrentInstaller + "-x64"
		} ELSE {
			$CurrentInstallerFile = $CurrentInstaller
		}
		
		IF ($i[3] -eq $True)
		{
			$CurrentInstallerFile = $CurrentInstallerFile + ".msi"
		} ELSE {
			$CurrentInstallerFile = $CurrentInstallerFile + ".exe"
		}
		
		Check-Results $NewInstaller[0] $ProgramName $NewInstaller[2] $NewInstaller[1] $NewInstaller[3] $LocalRepo $NewInstaller[4] $CurrentInstallerFile
		
		IF ($NewInstaller[2] -ne $False)
		{
			$Result = "@(`"" + $i[2] + "`",`"" + $NewInstaller[2] + "`",`"" + $NewInstaller[0] + "`"),"
			$PackageResults = $PackageResults + $Result
		}
		
		IF ($NewInstaller[0] -eq $True -Or $ForceDeploymentPackage -eq $True)
		{
			IF ($NewInstaller[2] -ne $False)
			{
				$TestforInstaller = $CurrentInstaller
				IF($i[4] -eq $True)
				{
					$TestforInstaller = $TestforInstaller + "-x64"
				}
				IF($i[3] -eq $True)
				{
					$TestforInstaller = $TestforInstaller + ".msi"
				} ELSE {
					$TestforInstaller = $TestforInstaller + ".exe"
				}
				
				IF ($BatchFiles -Or $Lansweeper -Or $PDQ -Or $SFX)
				{	
					IF(Test-Path $TestforInstaller)
					{						
						IF ($i[13] -eq $Null)
						{
							$PackageDescription = ""
						} ELSE {
							$PackageDescription = $i[13] + "`r`n`r`n"
						}
						
						Make-InstallPackages $BatchFiles $Lansweeper $LansweeperRepo $PDQ $SFX $NewInstaller[2] $i[0] $CurrentInstaller $ProgramName $LocalRepo $i[1] $i[3] $i[4] $i[9] $i[10] $i[11] $i[12] $PackageDescription
					}
				}
			}
		}
	}
	$PackageResults = $PackageResults.TrimEnd(",") + ")"
	Return $PackageResults
}