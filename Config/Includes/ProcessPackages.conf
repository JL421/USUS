function ProcessPackages
{
	ForEach ($i in $Updates)
	{
		IF ($i[0] -eq $False -And $i[1] -eq $False -And $i[2] -eq $False -And $i[3] -eq $False -And $i[4] -eq $False -And $i[5] -eq $False -And $i[6] -eq $False -And $i[7] -eq $False -And $i[8] -eq $False -And $i[9] -eq $False -And $i[10] -eq $False)
		{
			return
		}
		
		$LocalRepo = $SoftwareRepo
		
		IF (!(Test-Path $LocalRepo))
		{
			CLS
			Write-Host "Software Repository $LocalRepo dosen't seem to exist.
Please create this location or run this script with the credentials required to access it.`r`n"
			Exit
		}
		$ProgramName = $i[2]
		$url = $i[5]
		
		$LocalRepo = $LocalRepo + $i[0] + $i[1]
		IF (!(Test-Path $LocalRepo))
		{
			Try
			{
				New-Item $LocalRepo -Type Directory -ErrorAction Stop | Out-Null
			} Catch {
				Write-Host "Could not create program directory of $LocalRepo.
Please ensure that this script has Write permissions to this location, and try again.`r`n"
			} 
		}
		[string]$CurrentInstaller = $LocalRepo + "\" + $i[1]
		
		#Check Current Version
		
		$NewInstaller = GetLatestSoftware $CurrentInstaller $url $i[1] $i[3] $i[4] $i[6]
		
		Check-Results $NewInstaller[0] $ProgramName $NewInstaller[2] $NewInstaller[1] $NewInstaller[3] $LocalRepo
		
		IF ($NewInstaller[0] -eq $True -Or $ForceDeploymentPackage -eq $True)
		{
			IF ($NewInstaller[2] -ne $False)
			{
				Make-InstallPackages $Lansweeper $LansweeperRepo $PDQ $SEI $NewInstaller[2] $i[0] $CurrentInstaller $ProgramName $LocalRepo $i[1] $i[3] $i[4] $i[7] $i[8] $i[9] $i[10]
			}
		}
	}
}