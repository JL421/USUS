function Check-Results
{
	IF ($NewVersionAvailable -eq $True)
	{
		Write-Host "New Version of $HumanReadableName Available!`r`n"
		
		IF ($ArchiveOldVersions -eq $True)
		{
			IF ($PreviousVersion -ne 0)
			{
				$OldRepo = $LocalRepo + "\OldVersions"
				$CurrentInstaller = $LocalRepo + "\" + $InstallerName
				IF (!(Test-Path $OldRepo))
				{
					Try
					{
						New-Item $OldRepo -Type Directory -ErrorAction Stop | Out-Null
					} Catch {
					}
				}
			
				$OldRepo = $OldRepo + "\" + $PreviousVersion
				Try
				{
					New-Item $OldRepo -Type Directory -ErrorAction Stop | Out-Null
				} Catch {
				} Finally {
					Try
					{
						Copy-Item $CurrentInstaller $OldRepo -Force -ErrorAction Stop
					} Catch {
					}
					Chocolatey-Packages
				}
			}
		}
		
		Try
		{
			Copy-Item $LatestInstallLocation $LocalRepo -Force -ErrorAction Stop
		} Catch {
			Write-Host "Could not copy new installer to $LocalRepo.
Please ensure that this script has Write permissions to this location, and try again.`r`n"
		} Finally {
			
			Write-Host "$HumanReadableName updated to version $MostRecentVersion!`r`n"
		}
		Start-Job -ScriptBlock {
			param($FileDelete)& {
				$Counter = 0
				WHILE (Test-Path $FileDelete -And $Counter -lt 13)
				{
					Remove-Item $FileDelete -Force -ErrorAction SilentlyContinue
					Start-Sleep 5
					$Counter++
				}
			}
		} -ArgumentList $LatestInstallLocation | out-null
		"$HumanReadableName is on Version - $MostRecentVersion" | Out-File $InstallerVersionReportLocation -Append
		"$HumanReadableName Updated to Version - $MostRecentVersion" | Out-File $InstallerChangeReportLocation -Append
		
	} ELSEIF ($NewVersionAvailable -eq $False) {
		Write-Host "No New Version of $HumanReadableName Available`r`n"
		Start-Job -ScriptBlock {
			param($FileDelete)& {
				$Counter = 0
				WHILE (Test-Path $FileDelete -And $Counter -lt 13)
				{
					Remove-Item $FileDelete -Force -ErrorAction SilentlyContinue
					Start-Sleep 5
					$Counter++
				}
			}
		} -ArgumentList $LatestInstallLocation | out-null
		"$HumanReadableName is on Version - $MostRecentVersion" | Out-File $InstallerVersionReportLocation -Append
	} ELSEIF ($NewInstaller -eq $Null)
	{
	}
}