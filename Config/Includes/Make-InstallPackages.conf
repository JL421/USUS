function Make-InstallPackages($Lansweeper, $LansweeperRepo, $PDQ, $SEI, $Version, $PackageGroup, $CurrentInstaller, $Name, $LocalRepo, $PackageName, $IsMSI, $Architecture, $GetVersionCommand, $Quiet, $NoRestart, $CustomInstallFlags)
{
	$InstallerLocation = $CurrentInstaller
	$DeploymentLocation = $CurrentInstaller
	$FileName = $PackageName
	IF ($Architecture -eq $True)
	{
		$InstallerLocation = $InstallerLocation + "-x64"
		$DeploymentLocation = $DeploymentLocation + "-x64"
		$FileName = $FileName + "-x64"
	}
	$BaseFile = $FileName
	IF ($IsMSI -eq $True)
	{
		$InstallerLocation = $InstallerLocation + ".msi"
		$FileName = $FileName + ".msi"
	} ELSE {
		$InstallerLocation = $InstallerLocation + ".exe"
		$FileName = $FileName + ".exe"
	}
	
	$BatchFile = "@ECHO OFF`r`n
$GetVersionCommand`r`n
cls`r`n
IF NOT `"$Version`"==`"%currentversion%`" "
	
	IF ($IsMSI -eq $True)
	{
		$BatchFile = $BatchFile + "msiexec.exe /i `"$InstallerLocation`""
				
		IF ($Quiet -eq $True)
		{
			$BatchFile = $BatchFile + " /qn"

		}
		IF ($NoRestart -eq $True)
		{
			$BatchFile = $BatchFile + " /norestart"
		}
		
	} ELSE {
		$BatchFile = $BatchFile + $InstallerLocation
	}
	
	IF ($CustomInstallFlags -ne $Null)
	{
		$BatchFile = $BatchFile + " " + $CustomInstallFlags
	}
	$BatchLocation = $DeploymentLocation + ".bat"
	$BatchFile | Out-File $BatchLocation -Encoding "OEM"
	
	IF ($Lansweeper -eq $True)
	{
		$LansweeperPackageShare = $LansweeperRepo + $PackageGroup + $PackageName + "\"
		$LansweeperInstaller = $LansweeperPackageShare + $FileName
		$LansweeperFile = "<?xml version=`"1.0`" encoding=`"utf-8`"?>
<Package>
  <Name>$Name - Install</Name>
  <Description>Installs the latest $Name - Version ($Version)
Updated by USUS - $(get-date -f yyyy-MM-dd-HH-mm)</Description>
  <ShutdownOption>0</ShutdownOption>
  <ShutdownTime>0</ShutdownTime>
  <MaxDuration>900</MaxDuration>
  <Rescan>True</Rescan>
  <RunMode>2</RunMode>
  <Steps>
    <Step>
      <Nr>1</Nr>
      <Name>Check Install File</Name>
      <Type>5</Type>
      <ReturnCodes></ReturnCodes>
      <Success>-1</Success>
      <Failure>-3</Failure>
      <Path></Path>
      <Parameters></Parameters>
      <MSIParameters></MSIParameters>
      <MSIName></MSIName>
      <MSIVersion></MSIVersion>
      <Command></Command>
      <EditMode>False</EditMode>
      <Conditions>
        <Condition>
          <Type>1</Type>
          <SpecOne>$LansweeperPackageShare</SpecOne>
          <SpecTwo>$FileName</SpecTwo>
          <Operator>1</Operator>
          <Value></Value>
        </Condition>
      </Conditions>
    </Step>
    <Step>
      <Nr>2</Nr>
      <Name>Install $Name</Name>
      <Type>1</Type>
      <ReturnCodes>0,1641,3010</ReturnCodes>
      <Success>-2</Success>
      <Failure>-3</Failure>
      <Path>$LansweeperInstaller</Path>
      "
	  IF($IsMSI -eq $False)
	  {
		IF($CustomInstallFlags -ne $Null)
		{
			$LansweeperFile = $LansweeperFile + "<Parameters>$CustomInstallFlags</Parameters>"
		} ELSE {
			$LansweeperFile = $LansweeperFile + "<Parameters></Parameters>"
		}
		$LansweeperFile = $LansweeperFile + "      <MSIParameters></MSIParameters>
	  <MSIName></MSIName>
      <MSIVersion></MSIVersion>"
	  } ELSE {
		$LansweeperFile = $LansweeperFile + "<Parameters>$CustomInstallFlags</Parameters>
	  <MSIParameters>"
		IF($Quiet -eq $True)
		{
			$MSIParameters = $MSIParameters + "/qn "
		}
		IF($NoRestart -eq $True)
		{
			$MSIParameters = $MSIParameters + "/norestart "
		}
		$MSIParameters = $MSIParameters.Trim()
		$LansweeperFile = $LansweeperFile + "/i " + $MSIParameters + "</MSIParameters>"
		IF($CustomInstallFlags -ne $Null)
		{
			$MSIParameters = $MSIParameters + "$CustomInstallFlags"
			$MSIParameters = $MSIParameters.Trim()
		}
		$LansweeperFile = $LansweeperFile + "
	  <MSIName>$Name</MSIName>
      <MSIVersion>$Version</MSIVersion>"
	  }
	  $LansweeperFile = $LansweeperFile + "
      <Command>"
	  IF($IsMSI -eq $False)
	  {
		$LansweeperFile = $LansweeperFile + "`"$LansweeperInstaller`" "
		
		IF($CustomInstallFlags -ne $Null)
		{
			$LansweeperFile = $LansweeperFile + $CustomInstallFlags
		}
		
	  } ELSE {
		$LansweeperFile = $LansweeperFile + "msiexec.exe /i `"$LansweeperInstaller`" $MSIParameters"
	  }
	  $LansweeperFile = $LansweeperFile + "</Command>
      <EditMode>False</EditMode>
      <Conditions />
    </Step>
  </Steps>
  <SoftwareVersion>5242</SoftwareVersion>
</Package>"

		$LansweeperPath = $DeploymentLocation + "-Lansweeper.xml"
		$LansweeperFile | Out-File $LansweeperPath -Encoding "UTF8"
	}
	
	IF ($PDQ -eq $True)
	{
	
	}

	IF ($SFX -eq $True)
	{
		$SFXSourceFiles = $LocalRepo + "\"
		$SFXPath = $DeploymentLocation + "-SFX.exe"
		IF($IsMSI -eq $True)
		{
			$SFXInstaller = $BaseFile + ".msi"
		} ELSE {
			$SFXInstaller = $BaseFile + ".exe"
		}
		$SFXDFile = "[Version]		
Class=IEXPRESS
SEDVersion=3
[Options]
PackagePurpose=InstallApp
ShowInstallProgramWindow=1
HideExtractAnimation=1
UseLongFileName=1
InsideCompressed=0
CAB_FixedSize=0
CAB_ResvCodeSigning=0
RebootMode=N
InstallPrompt=%InstallPrompt%
DisplayLicense=%DisplayLicense%
FinishMessage=%FinishMessage%
TargetName=%TargetName%
FriendlyName=%FriendlyName%
AppLaunched=%AppLaunched%
PostInstallCmd=%PostInstallCmd%
AdminQuietInstCmd=%AdminQuietInstCmd%
UserQuietInstCmd=%UserQuietInstCmd%
SourceFiles=SourceFiles
[Strings]
InstallPrompt=
DisplayLicense=
FinishMessage=
TargetName=$SFXPath
FriendlyName=$Name
AppLaunched=cmd /c $BaseFile.bat
PostInstallCmd=<None>
AdminQuietInstCmd=
UserQuietInstCmd=
FILE0=`"$BaseFile.bat`"
FILE1=`"$SFXInstaller`"
[SourceFiles]
SourceFiles0=$SFXSourceFiles
[SourceFiles0]
%FILE0%=
%FILE1%="
		$SFXdPath = $DeploymentLocation + "-SFXd.sed"
		$SFXDFile | Out-File $SFXdPath -Encoding "OEM"
		IExpress.exe /N /Q $SFXDPath
	}
}